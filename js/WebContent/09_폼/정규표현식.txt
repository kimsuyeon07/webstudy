정규표현식

1. regular expression
2. 특정 문자의 매칭 결과(유무)를 판단하기 위한 표현식이다.
3. 자바스크립트의 정규식
	var regExp = /정규식/;
4. 메타문자
	 1) a      : 문자 a를 의미
	 2) a|b    : 문자 a 또는  문자 b
	 3) .      : 모든 문자를 의미 (1글자)
	 4) ^a     : 문자 a로 시작 (start)
	 5) a$     : 문자 a로 끝    (end)
	 6) a*     : 문자 a가 여러 번 나온다. 안 나와도 된다.
	 7) a+     : 문자 a가 여러 번 나온다. (최소) 1번은 나온다.
	 8) a{3}   : 문자 a가 '3번' 반복해서 나온다.
	 9) a{3,}  : 문자 a가' 3번 이상' 나온다. 
	10) a{3,5} : 문자 a가' 3번 이상 5번 이하' 나온다.
5. 정규식 문자클래스
	 1) [a] 	: 문자 a를 의미
	 2)	[.]  	: 문자 .을 의미
	 3) [ab] 	: 문자 a 또는 문자 b
	 4) [^ab]	: 문자 a 그리고 문자 b를 제외한 나머지 문자
	 5) ^[ab]	: 문자 a 또는 문자 b로 시작 (start)
	 6) [ab]$	: 문자 a 또는 문자 b로 끝    (end)
	 7) [a-z]	: 문자 a ~ 문자 z 사이 중 하나 (소문자 의미)
	 8) [A-Z] 	: 문자 A ~ 문자 Z 사이 중 하나 (대문자 의미)
	 9) [0~9] 	: 문자 0 ~ 문자 9  사이 중 하나 (숫자 의미)
	10) [가-힣]	: 문자 가  ~ 문자 힣 사이 중 하나 (한글 의미)
	11) \. 		: 문자 . 의미
	12) \s 		: 공백문자(space)를 의미
	13) \S		: 공백문자가 아니다(not space)를 의미
	14) \d		: 숫자(digit)를 의미 (0~9)
	15) \D		: 숫자가 아니다(not digit)를 의미
	16) \w 		: 대문자/소문자(word)를 의미
	17) \W		: 대문자/소문자가 아니다(not word)를 의미
	
	
연습
1. 문자 j를 1번 이상 포함하고 있는가?
	var reg = /j+/;
2. 소문자를 1번 이상 포함하고 있는가?
	var reg = /[a-z]+/;
3. 소문자 이거나 대문자인가?
	var reg = /[a-z]|[A-Z]/;
	var reg = /[a-zA-Z]/; → (공백없이 사용!)
4. 숫자가 3자리인가?
	var reg = /[0-9]{3}/;
	var reg = /\d{3}/;
5. 소문자가 아닌가?
	var reg = /[^a-z]/;



실전
1. 휴대전화번호가 맞는가? (모두 010으로 시작한다.)
	var regPhone = /^010-[0-9]{3,4}-[0-9]{4}$/;
	var regPhone = /^010-\d{3,4}-\d{4}$/;
2. 아이디가 맞는가? (5~20자의 영문 소문자, 숫자, 툭수기호[-,_] 만 사용 가능, 소문자나 숫자로 시작한다.
	var regId = /^[a-z0-9][a-z0-9_-]{4,19}$/;
3. 이메일이 맞는가? ( ksy724@naver.com)
	1) id@domain.com
	2) id@domain.co.kr
	var regEmail = /^[a-z0-9][a-z0-9_-]*@[a-zA-Z0-9]+([.][a-zA-Z]{2,}){1,2}$/;
4. 비밀번호가 맞는가? (8~16자 / 영문 대 소문자, 숫자, 모든 특수문자 (모두 1개이상은 포함되어야 한다.)
	(1) 대문자 포함되었는지 검사		?=.*[A-Z]
	(2) 소문자 포함되었는지 검사		?=.*[a-z]
	(3) 숫자가 포함되었는지 검사		?=.*[0-9]
	(4) 특수문자 포함되었는지 검사	?=.*['~!@#$%^&*()-_=+\[{\]}\\|;:'",<\\.>/?]
	var regPw = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*['~!@#$%^&*])[a-zA-Z0-9`~!@#$%^&*]{8,16}$/;







0










 